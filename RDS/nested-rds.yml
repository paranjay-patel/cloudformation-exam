---
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Create an RDS PostgreSQL 15 database instance on a designated data subnet. Use AWS Secrets Manager to securely store the database credentials 

Parameters:
  DBInstanceIdentifier:
    # AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: The instance name should begin with a letter and should contain only alphanumerics
    Default: mypostgresinstance
    Description: Name of the instance identifier 
    MaxLength: 60
    MinLength: 1
    Type: String

  DBName:
    # AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: The DB name should begin with a letter and should contain only alphanumerics
    Default: mytestDB
    Description: Postgres database name
    MaxLength: 64
    MinLength: 1
    Type: String
 
  # MasterUsername:
  #   # AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
  #   ConstraintDescription: The DB username should begin with a letter and should contain only alphanumerics
  #   Default: masteruser
  #   Description: Username for postgres database access
  #   MaxLength: 16
  #   MinLength: 1
  #   NoEcho: true
  #   Type: String

  # MasterUserPassword:
  #   # AllowedPattern: '[a-zA-Z0-9]*'
  #   ConstraintDescription: The db passoword should contain only alphanumerics
  #   Default: masteruser
  #   Description: Password for postgres database masteruser
  #   MaxLength: 41
  #   MinLength: 8
  #   NoEcho: true
  #   Type: String
 
  BackupRetentionPeriod:
    ConstraintDescription: DB backup retention period should be between 0 and 35 days
    Default: 0
    Description: The number of days for which the automatic DB snapshots are retained
    MaxValue: 35
    MinValue: 0
    Type: Number

  AllocatedStorage:
    ConstraintDescription: The size allocated for the instance should between 5 and 1024Gb
    Default: 20
    Description: The size of the instance in Gb
    MaxValue: 65536
    MinValue: 5
    Type: Number

  DBInstanceClass:
    AllowedValues:
     - db.t3.2xlarge
     - db.t3.xlarge
     - db.t3.large
     - db.t3.medium
     - db.t3.small
     - db.t3.micro
    ConstraintDescription: Select a valid database instance type
    Default: db.t3.micro
    Description: The database instance type
    Type: String

  MultiAZ:
    AllowedValues:
     - true
     - false
    ConstraintDescription: Select either true or false
    Default: false
    Description: Creates a Multi-AZ Postgres Amazon RDS instance
    Type: String


  Engine:
    Type: String
    Description: Select Database Type
    Default: "postgres"
    AllowedValues:
      - Aurora
      - MySQL
      - MariaDB
      - postgres
      - Oracle
      - Microsoft SQL Server
      - IBM Db2

  EngineVersion:
   # AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: database version should be valid
    Default: "15.2"
    Description: The version number of the database engine to use.
    Type: String
 
  # AvailabilityZone:
  #   Description: The availability zone for the RDS instance
  #   Default: us-east-1
  #   Type: String

Resources:
  MyDBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      Engine: !Ref Engine
      EngineVersion: !Ref EngineVersion
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref AllocatedStorage
      DBSubnetGroupName: !Ref DBSubnetGroup
      # MasterUsername: !Ref MasterUsername
      # # MasterUserPassword: !Ref MasterUserPassword
      # MasterUsername: !Join ["", ["{{resolve:secretsmanager:", !Ref MyDatabaseSecret, ":SecretString:username}}"]]
      # MasterUserPassword: !Join ["", ["{{resolve:secretsmanager:", !Ref MyDatabaseSecret, ":SecretString:password}}"]]
      MasterUsername: !Join ["", ["{{resolve:secretsmanager:", !ImportValue DatabaseSecretARN, ":SecretString:username}}"]]
      MasterUserPassword: !Join ["", ["{{resolve:secretsmanager:", !ImportValue DatabaseSecretARN, ":SecretString:password}}"]]

      PubliclyAccessible: false
      VPCSecurityGroups: 
        - !ImportValue RDSSecurityGroup  
      Tags:
        - Key: Name
          Value: 'MyPostgreSQLDB'

  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: 'Subnet group for RDS'
      SubnetIds:
        - !ImportValue  PrivateSubnet1Id
        - !ImportValue  PrivateSubnet2Id

Outputs:
  RDSInstanceEndpoint:
    Description: 'Endpoint address of the RDS instance'
    Value: !GetAtt MyDBInstance.Endpoint.Address
